{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\arpit\\\\Documents\\\\Sharpner Nextjs\\\\meetUpApp\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetUpDetails from \"../../components/meetups/MeetUpDetails\";\nimport MeetupItem from \"../../components/meetups/MeetupItem\"; // MongoClient\n\nfunction ShowDetails(props) {\n  console.log(props);\n  var meetup = JSON.parse(props.meetups);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MeetUpDetails, {\n      image: meetup.image,\n      title: meetup.title,\n      address: meetup.address,\n      description: meetup.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_c = ShowDetails;\nexport var __N_SSG = true;\nexport default ShowDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowDetails\");","map":{"version":3,"sources":["C:/Users/arpit/Documents/Sharpner Nextjs/meetUpApp/pages/[meetupId]/index.js"],"names":["MeetUpDetails","MeetupItem","ShowDetails","props","console","log","meetup","JSON","parse","meetups","image","title","address","description"],"mappings":";;AACA,OAAOA,aAAP,MAA0B,wCAA1B;AACA,OAAOC,UAAP,MAAuB,qCAAvB,C,CACA;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAIG,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACM,OAAjB,CAAb;AAEA,sBACE;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,KAAK,EAAEH,MAAM,CAACI,KADhB;AAEE,MAAA,KAAK,EAAEJ,MAAM,CAACK,KAFhB;AAGE,MAAA,OAAO,EAAEL,MAAM,CAACM,OAHlB;AAIE,MAAA,WAAW,EAAEN,MAAM,CAACO;AAJtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;KAdQX,W;;AAiET,eAAeA,WAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport MeetUpDetails from \"../../components/meetups/MeetUpDetails\";\r\nimport MeetupItem from \"../../components/meetups/MeetupItem\";\r\n// MongoClient\r\n\r\nfunction ShowDetails(props) {\r\n  console.log(props);\r\n  let meetup = JSON.parse(props.meetups);\r\n\r\n  return (\r\n    <div>\r\n      <MeetUpDetails\r\n        image={meetup.image}\r\n        title={meetup.title}\r\n        address={meetup.address}\r\n        description={meetup.description}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://arpitsinghyadav19:Arpit6280@cluster0.ukwpzd9.mongodb.net/test?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: true,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch the data from an API\r\n  const meetupId = context.params.meetupId;\r\n  let id = new ObjectId(meetupId);\r\n  console.log(typeof meetupId);\r\n  console.log(meetupId);\r\n  try {\r\n    const client = await MongoClient.connect(\r\n      \"mongodb+srv://arpitsinghyadav19:Arpit6280@cluster0.ukwpzd9.mongodb.net/test?retryWrites=true&w=majority\"\r\n    );\r\n\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection(\"meetups\");\r\n    // const meetups = await meetupsCollection.findOne({ title: \"Demo2\" });\r\n    const meetups = await meetupsCollection.findOne({\r\n      _id: id,\r\n    });\r\n\r\n    console.log(\"meetups -\", meetups);\r\n    client.close();\r\n    return {\r\n      props: {\r\n        meetups: JSON.stringify(meetups),\r\n        // meetupData: JSON.parse(meetups),\r\n        // meetupData: JSON.stringify(meetups),\r\n      },\r\n    };\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport default ShowDetails;\r\n"]},"metadata":{},"sourceType":"module"}