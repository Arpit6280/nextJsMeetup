{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\arpit\\\\Documents\\\\Sharpner Nextjs\\\\meetUpApp\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetUpDetails from \"../../components/meetups/MeetUpDetails\";\nimport MeetupItem from \"../../components/meetups/MeetupItem\"; // MongoClient\n\nfunction ShowDetails(props) {\n  // console.log(props);\n  let meetup = JSON.parse(props.meetups);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MeetUpDetails, {\n      image: meetup.image,\n      title: meetup.title,\n      address: meetup.address,\n      description: meetup.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://arpitsinghyadav19:Arpit6280@cluster0.ukwpzd9.mongodb.net/test?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: true,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch the data from an API\n  const meetupId = context.params.meetupId;\n  let id = new ObjectId(meetupId);\n  console.log(typeof meetupId);\n  console.log(meetupId);\n\n  try {\n    const client = await MongoClient.connect(\"mongodb+srv://arpitsinghyadav19:Arpit6280@cluster0.ukwpzd9.mongodb.net/test?retryWrites=true&w=majority\");\n    const db = client.db();\n    const meetupsCollection = db.collection(\"meetups\");\n    const meetups = await meetupsCollection.findOne({\n      _id: id\n    }); // console.log(\"meetups -\", meetups);\n\n    client.close();\n    return {\n      props: {\n        meetups: JSON.stringify(meetups)\n      }\n    };\n  } catch (e) {\n    console.log(e);\n  }\n}\nexport default ShowDetails;","map":{"version":3,"sources":["C:/Users/arpit/Documents/Sharpner Nextjs/meetUpApp/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetUpDetails","MeetupItem","ShowDetails","props","meetup","JSON","parse","meetups","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","find","_id","toArray","close","fallback","paths","map","params","meetupId","toString","getStaticProps","context","id","console","log","findOne","stringify","e"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,OAAOC,UAAP,MAAuB,qCAAvB,C,CACA;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B;AACA,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,OAAjB,CAAb;AAEA,sBACE;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,KAAK,EAAEH,MAAM,CAACI,KADhB;AAEE,MAAA,KAAK,EAAEJ,MAAM,CAACK,KAFhB;AAGE,MAAA,OAAO,EAAEL,MAAM,CAACM,OAHlB;AAIE,MAAA,WAAW,EAAEN,MAAM,CAACO;AAJtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMf,WAAW,CAACgB,OAAZ,CACnB,yGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMV,OAAO,GAAG,MAAMS,iBAAiB,CAACE,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAP,EAAAA,MAAM,CAACQ,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,IADL;AAELC,IAAAA,KAAK,EAAEhB,OAAO,CAACiB,GAAR,CAAapB,MAAD,KAAa;AAC9BqB,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEtB,MAAM,CAACe,GAAP,CAAWQ,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,MAAII,EAAE,GAAG,IAAI/B,QAAJ,CAAa2B,QAAb,CAAT;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAON,QAAnB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;;AACA,MAAI;AACF,UAAMb,MAAM,GAAG,MAAMf,WAAW,CAACgB,OAAZ,CACnB,yGADmB,CAArB;AAIA,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,UAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,UAAMV,OAAO,GAAG,MAAMS,iBAAiB,CAACiB,OAAlB,CAA0B;AAC9Cd,MAAAA,GAAG,EAAEW;AADyC,KAA1B,CAAtB,CARE,CAYF;;AACAjB,IAAAA,MAAM,CAACQ,KAAP;AACA,WAAO;AACLlB,MAAAA,KAAK,EAAE;AACLI,QAAAA,OAAO,EAAEF,IAAI,CAAC6B,SAAL,CAAe3B,OAAf;AADJ;AADF,KAAP;AAKD,GAnBD,CAmBE,OAAO4B,CAAP,EAAU;AACVJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,CAAZ;AACD;AACF;AAED,eAAejC,WAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport MeetUpDetails from \"../../components/meetups/MeetUpDetails\";\r\nimport MeetupItem from \"../../components/meetups/MeetupItem\";\r\n// MongoClient\r\n\r\nfunction ShowDetails(props) {\r\n  // console.log(props);\r\n  let meetup = JSON.parse(props.meetups);\r\n\r\n  return (\r\n    <div>\r\n      <MeetUpDetails\r\n        image={meetup.image}\r\n        title={meetup.title}\r\n        address={meetup.address}\r\n        description={meetup.description}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://arpitsinghyadav19:Arpit6280@cluster0.ukwpzd9.mongodb.net/test?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: true,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch the data from an API\r\n  const meetupId = context.params.meetupId;\r\n  let id = new ObjectId(meetupId);\r\n  console.log(typeof meetupId);\r\n  console.log(meetupId);\r\n  try {\r\n    const client = await MongoClient.connect(\r\n      \"mongodb+srv://arpitsinghyadav19:Arpit6280@cluster0.ukwpzd9.mongodb.net/test?retryWrites=true&w=majority\"\r\n    );\r\n\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection(\"meetups\");\r\n    const meetups = await meetupsCollection.findOne({\r\n      _id: id,\r\n    });\r\n\r\n    // console.log(\"meetups -\", meetups);\r\n    client.close();\r\n    return {\r\n      props: {\r\n        meetups: JSON.stringify(meetups),\r\n      },\r\n    };\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport default ShowDetails;\r\n"]},"metadata":{},"sourceType":"module"}