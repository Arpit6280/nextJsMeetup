{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\arpit\\\\Documents\\\\Sharpner Nextjs\\\\meetUpApp\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetUpDetails from \"../../components/meetups/MeetUpDetails\";\nimport MeetupItem from \"../../components/meetups/MeetupItem\"; // MongoClient\n\nfunction ShowDetails(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MeetUpDetails, {\n      image: \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n      title: \"First Meetup\",\n      address: \"New Delhi Dwarka\",\n      description: \"This is first meetup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://arpitsinghyadav19:Arpit6280@cluster0.ukwpzd9.mongodb.net/test?retryWrites=true&w=majority\");\n  const db = client.db(); // console.log(db);\n\n  const meetupsCollection = db.collection(\"meetups\"); // console.log(meetupsCollection);\n\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  console.log(\"meetups -\", meetups);\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch the data from an API\n  const meetupId = context.params.meetupId;\n  console.log(typeof meetupId);\n  console.log(meetupId);\n  const client = await MongoClient.connect(\"mongodb+srv://arpitsinghyadav19:Arpit6280@cluster0.ukwpzd9.mongodb.net/test?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetup = await meetupsCollection.find({});\n  console.log(meetup);\n  client.close();\n  return {\n    props: {\n      meetupData: meetup\n    }\n  };\n}\nexport default ShowDetails;","map":{"version":3,"sources":["C:/Users/arpit/Documents/Sharpner Nextjs/meetUpApp/pages/[meetupId]/index.js"],"names":["MongoClient","MeetUpDetails","MeetupItem","ShowDetails","props","console","log","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","meetupData"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,OAAOC,UAAP,MAAuB,qCAAvB,C,CACA;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACE;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,KAAK,EAAC,gFADR;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,OAAO,EAAC,kBAHV;AAIE,MAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;AAED,OAAO,eAAeG,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,yGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX,CAJqC,CAKrC;;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B,CANqC,CAOrC;;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBO,OAAzB;AACAL,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAlB,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOiB,QAAnB;AACAlB,EAAAA,OAAO,CAACC,GAAR,CAAYiB,QAAZ;AACA,QAAMf,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CACnB,yGADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMS,MAAM,GAAG,MAAMV,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,CAArB;AAEAT,EAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;AACAb,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLb,IAAAA,KAAK,EAAE;AACLuB,MAAAA,UAAU,EAAEN;AADP;AADF,GAAP;AAKD;AAED,eAAelB,WAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport MeetUpDetails from \"../../components/meetups/MeetUpDetails\";\r\nimport MeetupItem from \"../../components/meetups/MeetupItem\";\r\n// MongoClient\r\n\r\nfunction ShowDetails(props) {\r\n  console.log(props);\r\n  return (\r\n    <div>\r\n      <MeetUpDetails\r\n        image=\"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\"\r\n        title=\"First Meetup\"\r\n        address=\"New Delhi Dwarka\"\r\n        description=\"This is first meetup\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://arpitsinghyadav19:Arpit6280@cluster0.ukwpzd9.mongodb.net/test?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  // console.log(db);\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  // console.log(meetupsCollection);\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  console.log(\"meetups -\", meetups);\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch the data from an API\r\n  const meetupId = context.params.meetupId;\r\n  console.log(typeof meetupId);\r\n  console.log(meetupId);\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://arpitsinghyadav19:Arpit6280@cluster0.ukwpzd9.mongodb.net/test?retryWrites=true&w=majority\"\r\n  );\r\n\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetup = await meetupsCollection.find({});\r\n\r\n  console.log(meetup);\r\n  client.close();\r\n  return {\r\n    props: {\r\n      meetupData: meetup,\r\n    },\r\n  };\r\n}\r\n\r\nexport default ShowDetails;\r\n"]},"metadata":{},"sourceType":"module"}